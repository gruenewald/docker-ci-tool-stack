<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <logRotator class="hudson.tasks.LogRotator">
    <daysToKeep>-1</daysToKeep>
    <numToKeep>10</numToKeep>
    <artifactDaysToKeep>-1</artifactDaysToKeep>
    <artifactNumToKeep>-1</artifactNumToKeep>
  </logRotator>
  <keepDependencies>false</keepDependencies>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty plugin="github@1.14.0">
      <projectUrl>https://github.com/codecentric/conference-app/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.25">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
  </properties>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@2.4.0">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <url>https://github.com/marcelbirkner/docker-ci-tool-stack/</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>*/master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <submoduleCfg class="list"/>
    <extensions/>
  </scm>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers>
    <hudson.triggers.TimerTrigger>
      <spec>H 9 * * *</spec>
    </hudson.triggers.TimerTrigger>
  </triggers>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <javaposse.jobdsl.plugin.ExecuteDslScripts plugin="job-dsl@1.40">
      <scriptText>def giturl = &apos;https://github.com/tobiasflohre/movie-database&apos;
job(&quot;movie-database-1-ci&quot;) {
  parameters {
    stringParam(&quot;BRANCH&quot;, &quot;master&quot;, &quot;Define TAG or BRANCH to build from&quot;)
    stringParam(&quot;REPOSITORY_URL&quot;, &quot;http://nexus:8081/nexus/content/repositories/releases/&quot;, &quot;Nexus Release Repository URL&quot;)
  }
  scm {
    git {
      remote {
        url(giturl)
      }
      createTag(false)
      clean()
    }
  }
  wrappers {
    colorizeOutput()
    preBuildCleanup()
  }
  triggers {
    scm(&apos;30/H * * * *&apos;)
    githubPush()
  }
  steps {
    maven {
        goals(&apos;clean versions:set -DnewVersion=DEV-\${BUILD_NUMBER}&apos;)
        mavenInstallation(&apos;Maven 3.3.3&apos;)
        rootPOM(&apos;pom.xml&apos;)
        mavenOpts(&apos;-Xms512m -Xmx1024m&apos;)
        providedGlobalSettings(&apos;MyGlobalSettings&apos;)
    }
    maven {
      goals(&apos;clean deploy -DaltDeploymentRepository=nexus-release-repository::default::\${REPOSITORY_URL}&apos;)
      mavenInstallation(&apos;Maven 3.3.3&apos;)
      rootPOM(&apos;pom.xml&apos;)
      mavenOpts(&apos;-Xms512m -Xmx1024m&apos;)
      providedGlobalSettings(&apos;MyGlobalSettings&apos;)
    }
  }
  publishers {
    chucknorris()
    archiveJunit(&apos;**/target/surefire-reports/*.xml&apos;)
    publishCloneWorkspace(&apos;**&apos;, &apos;&apos;, &apos;Any&apos;, &apos;TAR&apos;, true, null)
    downstreamParameterized {
      trigger(&apos;movie-database-2-sonar&apos;) {
        currentBuild()
      }
    }
  }
}
job(&quot;movie-database-2-sonar&quot;) {
  parameters {
    stringParam(&quot;BRANCH&quot;, &quot;master&quot;, &quot;Define TAG or BRANCH to build from&quot;)
  }
  scm {
    cloneWorkspace(&quot;movie-database-1-ci&quot;)
  }
  wrappers {
    colorizeOutput()
    preBuildCleanup()
  }
  steps {
    maven {
      goals(&apos;org.jacoco:jacoco-maven-plugin:0.7.4.201502262128:prepare-agent install -Psonar&apos;)
      mavenInstallation(&apos;Maven 3.3.3&apos;)
      rootPOM(&apos;pom.xml&apos;)
      mavenOpts(&apos;-Xms512m -Xmx1024m&apos;)
      providedGlobalSettings(&apos;MyGlobalSettings&apos;)
    }
    maven {
      goals(&apos;sonar:sonar -Psonar&apos;)
      mavenInstallation(&apos;Maven 3.3.3&apos;)
      rootPOM(&apos;pom.xml&apos;)
      mavenOpts(&apos;-Xms512m -Xmx1024m&apos;)
      providedGlobalSettings(&apos;MyGlobalSettings&apos;)
    }
  }
  publishers {
    chucknorris()
  }
}
listView(&apos;Movie Database&apos;) {
    description(&apos;&apos;)
    filterBuildQueue()
    filterExecutors()
    jobs {
        regex(/movie-database-.*/)
    }
    columns {
        status()
        weather()
        name()
        lastSuccess()
        lastFailure()
        lastDuration()
        buildButton()
    }
}</scriptText>
      <usingScriptText>true</usingScriptText>
      <ignoreExisting>false</ignoreExisting>
      <removedJobAction>DELETE</removedJobAction>
      <removedViewAction>DELETE</removedViewAction>
      <lookupStrategy>JENKINS_ROOT</lookupStrategy>
      <additionalClasspath></additionalClasspath>
    </javaposse.jobdsl.plugin.ExecuteDslScripts>
  </builders>
  <publishers/>
  <buildWrappers/>
</project>
